name: Documentation Verification

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  verify-docs:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get update && sudo apt-get install -y jq
        
    - name: Verify Python scripts
      run: |
        echo "🔍 Checking Python script syntax..."
        python -m py_compile verify_docs.py extract_mermaid.py test_links.py generate_report.py
        echo "✅ All Python scripts have valid syntax"
        
    - name: Run core verification
      run: |
        echo "🚀 Running documentation verification..."
        python verify_docs.py
        echo "📊 Extracting Mermaid diagrams..."
        python extract_mermaid.py
        echo "🔗 Testing internal links..."
        python test_links.py
        
    - name: Verify Mermaid diagrams
      run: |
        if [ -d "extracted_diagrams" ] && [ -f "extracted_diagrams/summary.json" ]; then
          echo "📊 Found $(jq '.total_diagrams' extracted_diagrams/summary.json) Mermaid diagrams"
          echo "✅ Mermaid diagram extraction successful"
        else
          echo "❌ No Mermaid diagrams found or extraction failed"
          exit 1
        fi
        
    - name: Verify link testing
      run: |
        if [ -f "link_test_results.json" ]; then
          failed_links=$(jq '.summary.total_failed' link_test_results.json)
          if [ "$failed_links" -eq 0 ]; then
            echo "✅ All links tested successfully"
          else
            echo "❌ Found $failed_links failed links"
            exit 1
          fi
        else
          echo "❌ Link test results not found"
          exit 1
        fi
        
    - name: Generate verification report
      run: |
        python generate_report.py > verification_summary.md
        echo "📋 Verification report generated"
        
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: verification-results
        path: |
          extracted_diagrams/
          link_test_results.json
          verification_summary.md
        retention-days: 7
        
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('verification_summary.md')) {
            const report = fs.readFileSync('verification_summary.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📋 Documentation Verification Report\n\n${report}`
            });
          }
