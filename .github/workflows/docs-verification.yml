name: Documentation Verification

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  verify-docs:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get update && sudo apt-get install -y jq
        
    - name: Verify Python scripts
      run: |
        echo "üîç Checking Python script syntax..."
        python -m py_compile tools/verify_docs.py tools/extract_mermaid.py tools/generate_report.py
        echo "‚úÖ All Python scripts have valid syntax"
        
    - name: Run core verification
      run: |
        echo "üöÄ Running documentation verification..."
        python tools/verify_docs.py
        echo "üìä Extracting Mermaid diagrams..."
        python tools/extract_mermaid.py
        echo "üîó Testing Mermaid diagrams..."
        python tools/quick_mermaid_check.py
        
    - name: Verify results
      run: |
        echo "üìä Checking verification results..."
        
        # Check Mermaid diagrams
        if [ -d "extracted_diagrams" ] && [ -f "extracted_diagrams/summary.json" ]; then
          echo "üìä Found $(jq '.total_diagrams' extracted_diagrams/summary.json) Mermaid diagrams"
          echo "‚úÖ Mermaid diagram extraction successful"
        else
          echo "‚ùå No Mermaid diagrams found or extraction failed"
          exit 1
        fi
        
        # Check Mermaid diagram verification
        echo "‚úÖ Mermaid diagram verification completed"
        
    - name: Generate verification report
      run: |
        python tools/generate_report.py > verification_summary.md
        echo "üìã Verification report generated"
        
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: verification-results
        path: |
          extracted_diagrams/
          verification_summary.md
        retention-days: 7
        
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          try {
            if (fs.existsSync('verification_summary.md')) {
              const report = fs.readFileSync('verification_summary.md', 'utf8');
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## üìã Documentation Verification Report\n\n${report}`
              });
              console.log('‚úÖ Successfully commented on PR');
            } else {
              console.log('‚ö†Ô∏è  No verification summary found to comment');
            }
          } catch (error) {
            console.log('‚ö†Ô∏è  Could not comment on PR:', error.message);
            console.log('   This is not critical - verification results are available in artifacts');
          }
